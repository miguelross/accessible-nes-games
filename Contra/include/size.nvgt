/* size.nvgt - convert an unsigned int to a human readable size
 * This also contains a few very useful size constants. int size=64*KILOBYTES, size2=128*MEGABYTES;
 *
 * NVGT - NonVisual Gaming Toolkit
 * Copyright (c) 2022-2024 Sam Tupy
 * https://nvgt.gg
 * This software is provided "as-is", without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
 * Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
 * 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
*/

const uint64 KILOBYTES = 1024;
const uint64 MEGABYTES = 1024 ** 2;
const uint64 GIGABYTES = 1024 ** 3;
const uint64 TERABYTES = uint64(1024)** 4;
const string[] SIZE_TO_STRING_UNITS = {"B", "KB", "MB", "GB", "TB"};

string size_to_string(uint64 size, uint8 round_place = 2) {
	if (size < 1) return "1" + SIZE_TO_STRING_UNITS[0];
	for (int8 i = SIZE_TO_STRING_UNITS.length() - 1; i >= 0; i--) {
		if (size >= pow(1024, i) or i == 0) {
			double rsize = round(size / pow(1024, i), round_place);
			return rsize + SIZE_TO_STRING_UNITS[i];
		}
	}
	return size + SIZE_TO_STRING_UNITS[0];
}
