/* dget.nvgt - routines to make the storing and retrieval of basic value types from Angelscript dictionaries just a bit easier
 *
 * NVGT - NonVisual Gaming Toolkit
 * Copyright (c) 2022-2024 Sam Tupy
 * https://nvgt.gg
 * This software is provided "as-is", without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
 * Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
 * 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
*/

double dgetn(dictionary@ d, const string& in key, double def = 0.0) {
	if (@d == null) return def;
	double v;
	if (!d.get(key, v)) return def;
	return v;
}
string dgets(dictionary@ d, const string& in key, string def = "") {
	if (@d == null) return def;
	string v;
	if (!d.get(key, v)) return def;
	return v;
}
string[] dgetsl_default(0);
string[] dgetsl(dictionary@ d, const string& in key, string[] def = dgetsl_default) {
	string[] sl;
	if (@d == null) return def;
	if (!d.exists(key)) return def;
	string v;
	d.get(key, sl);
	return sl;
}
bool dgetb(dictionary@ d, const string& in key, bool def = false) {
	if (@d == null) return def;
	bool v;
	if (!d.get(key, v)) return def;
	return v;
}
